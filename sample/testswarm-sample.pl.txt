#!/usr/bin/perl

# CONFIGURE

# The location of the TestSwarm that you're going to run against.

my $SWARM = "http://localhost/testswarm/";

# Your TestSwarm username.
my $USER = "username";

## replace this
# Your authorization token.
my $AUTH_TOKEN = "7a1015b8b0eff140bc870e3b821e3e50b5aa30e6";

# The number of commits to search back through
my $NUM = 3;

# The maximum number of times you want the tests to be run.
my $MAX_RUNS = 5;

my $JOB_NAME = "QUnit Sample Test Job";

# The browsers you wish to run against. Options include:
#  - "all" all available browsers.
#  - "popular" the most popular browser (99%+ of all browsers in use)
#  - "current" the current release of all the major browsers
#  - "gbs" the browsers currently supported in Yahoo's Graded Browser Support
#  - "beta" upcoming alpha/beta of popular browsers
#  - "mobile" the current releases of mobile browsers
#  - "popularbeta" the most popular browser and their upcoming releases
#  - "popularbetamobile" the most popular browser and their upcoming releases and mobile browsers
my $BROWSERS = "all";

# All the suites that you wish to run within this job
# (can be any number of suites)

## insert static suite list here
my %SUITES = ();

$SUITES{'math'} = "http://localhost/testswarm/sample/index.html";

########### NO NEED TO CONFIGURE BELOW HERE ############

my $DEBUG = 1;

if ( exists &BUILD_SUITES ) {
	&BUILD_SUITES();
}

my %props = (
	"state" => "addjob",
	"output" => "dump",
	"user" => $USER,
	"max" => $MAX_RUNS,
	"job_name" => $JOB_NAME,
	"browsers" => $BROWSERS,
	"auth" => $AUTH_TOKEN
);

my $query = "";

foreach my $prop ( keys %props ) {
	$query .= ($query ? "&" : "") . $prop . "=" . clean($props{$prop});
}

foreach my $suite ( sort keys %SUITES ) {
	$query .= "&suites[]=" . clean($suite) .
	          "&urls[]=" . clean($SUITES{$suite});
}

print "curl -d \"$query\" $SWARM\n" if ( $DEBUG );

my $results = `curl -d "$query" $SWARM`;
print "Results: $results\n" if ( $DEBUG );

sub clean {
	my $str = shift;
	$str =~ s/([^A-Za-z0-9])/sprintf("%%%02X", ord($1))/seg;
	return $str;
}

